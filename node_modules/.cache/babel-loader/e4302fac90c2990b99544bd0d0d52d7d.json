{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/robofriends/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; // import { createStore } from 'redux';\n\nimport { createStore, applyMiddleware } from 'redux'; //#Middleware: added\n\nimport { createLogger } from 'redux-logger'; //#Middleware: added\n\nimport thunk from 'redux-thunk'; //#Async Action: added\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { searchRobots } from './reducers';\nimport 'tachyons'; //Redux:\n//Action --> Reducer --> Store (big JS object that describes state of app) --> Make changes (React)\n//with redux all states can be removed; will be passed down from the store as a prop to <App>\n\nconst logger = createLogger(); //#Middleware: added\n//create store\n// const store = createStore(rootReducer); //combine all reducers to rootReducer; here only one: searchRobots\n// const store = createStore(searchRobots); \n//#Middleware: below will automatically log prev state, action, next state\n// const store = createStore(searchRobots, applyMiddleware(logger)); //#Middleware: added\n\nconst store = createStore(searchRobots, applyMiddleware(thunk, logger)); //#Async Action: added\n// ReactDOM.render(<App />, document.getElementById('root'));\n// pass store as props object\n// ReactDOM.render(<App store={store}/>, document.getElementById('root'));\n//do not pass store to all elements down the tree but only App --> use Provider\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/robofriends/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","createLogger","thunk","App","registerServiceWorker","searchRobots","logger","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAAsD;;AACtD,SAASC,YAAT,QAA6B,cAA7B,C,CAA6C;;AAC7C,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AAGjC,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAO,UAAP,C,CAEA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGL,YAAY,EAA3B,C,CAA8B;AAE9B;AACA;AACA;AAEA;AACA;;AAEA,MAAMM,KAAK,GAAGR,WAAW,CAACM,YAAD,EAAeL,eAAe,CAACE,KAAD,EAAOI,MAAP,CAA9B,CAAzB,C,CAAwE;AAGxE;AACA;AACA;AAEA;;AACAT,QAAQ,CAACW,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACX,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADW,CAAhB,EAEiBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFjB;AAIAN,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { createStore } from 'redux';\nimport { createStore, applyMiddleware } from 'redux'; //#Middleware: added\nimport { createLogger } from 'redux-logger'; //#Middleware: added\nimport thunk from 'redux-thunk'; //#Async Action: added\n\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { searchRobots } from './reducers';\nimport 'tachyons';\n\n//Redux:\n//Action --> Reducer --> Store (big JS object that describes state of app) --> Make changes (React)\n//with redux all states can be removed; will be passed down from the store as a prop to <App>\n\nconst logger = createLogger();//#Middleware: added\n\n//create store\n// const store = createStore(rootReducer); //combine all reducers to rootReducer; here only one: searchRobots\n// const store = createStore(searchRobots); \n\n//#Middleware: below will automatically log prev state, action, next state\n// const store = createStore(searchRobots, applyMiddleware(logger)); //#Middleware: added\n\nconst store = createStore(searchRobots, applyMiddleware(thunk,logger)); //#Async Action: added\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// pass store as props object\n// ReactDOM.render(<App store={store}/>, document.getElementById('root'));\n\n//do not pass store to all elements down the tree but only App --> use Provider\nReactDOM.render(<Provider store={store}>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>, document.getElementById('root'));\n\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}